name: 'Generate SBOM (SPDX) and Context'
description: 'Generate SBOM (SPDX) and OpenContext Context about the SBOM'
inputs:
  upload_context:
    description: 'Upload context to release?'
    required: true
    default: 'true'
outputs:
  sbom_path:
    description: 'The path of the SBOM generated'
    value: ${{ steps.generate-sbom.outputs.fileName }} 
  sbom_download_url:
    description: 'The release URL where the SBOM can be downloaded from'
    value: ${{ steps.get-sbom-url.outputs.url }}
  context_path:
    description: 'The path of the SBOM Context'
    value: ${{ steps.generate-context.outputs.filename }}
  context_url:
    description: 'The release URL where the context can be downloaded from if uploaded'
    value: ${{ steps.get-context-url.outputs.url }}
runs:
  using: 'composite'
  steps:
    - id: generate-sbom
      uses: advanced-security/sbom-generator-action@v0.0.1
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - id: upload-sbom-release
      name: Upload SBOM as release artifact
      if: ${{ github.event_name == 'release' }}
      uses: JasonEtco/upload-to-release@v0.1.1
      with:
        args: ${{ steps.generate-sbom.outputs.fileName }} application/json
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - id: get-sbom-url
      shell: bash
      run: |
        url=''
        if [[ ${GITHUB_EVENT_NAME} == "release" ]]; then
          url="$(jq -r '.release.html_url')/${{ steps.generate-sbom.outputs.fileName }}"
        else
          echo "ERROR: Unable to automatically generate URL of SBOM."
          exit 1
        fi
        echo "url=${url}" >> "$GITHUB_OUTPUT"
    - uses: opencontextinc/artifact-context@v0.1.0
      id: generate-context
      name: Generate context about the SBOM
      with:
        type: sbom
        url: ${{ steps.get-sbom-url.outputs.url }}
    - id: upload-context-release
      name: Upload Context as release artifact
      if: ${{ inputs.upload_context == 'true' }}
      uses: JasonEtco/upload-to-release@v0.1.1
      with:
        args: ${{ steps.generate-context.outputs.filename }} application/yaml
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - id: get-context-url
      shell: bash
      run: |
        url='N/A'
        if [[ "${{ inputs.upload_context }}" == "true" ]]; then
          url="$(jq -r '.release.html_url')/${{ steps.generate-context.outputs.filename }}"
        else
        fi
        echo "url=${url}" >> "$GITHUB_OUTPUT"
